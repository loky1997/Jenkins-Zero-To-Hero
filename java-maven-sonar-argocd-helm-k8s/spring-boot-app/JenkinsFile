pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/loky1997/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    //stage('Static Code Analysis') {
     // environment {
      //  SONAR_URL = "http://13.233.96.59:9000"
    //  }
     // steps {
     //   withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
      //  sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
       // }
      //}
    //}
    stage('Build and Push Docker Image') {
      steps {
           sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t lokeshhs591/ultimate-cicd-abhishek:${BUILD_NUMBER} .'
                withCredentials([string(credentialsId: 'DOCKER_HUB', variable: 'DOCKERHUB')]) {
                sh 'docker login -u lokeshhs591 -p ${DOCKERHUB}'
                sh 'docker push lokeshhs591/ultimate-cicd-abhishek:${BUILD_NUMBER}'
            }
        }
      }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "loky1997"
        }
        steps {
            withCredentials([string(credentialsId: 'Github', variable: 'github')]) {
                sh '''
                    git config user.email "lokeshhs591@gmail.com"
                    git config user.name "lokesh devops"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${github}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
